const{
    Connection,
    PublicKey,
    clusterApiUrl,
    Keypair,
    LAMPORTS_PER_SOL
} = require("@solana/web3.js");

const newPair = new Keypair();

const publicKey = new PublicKey(newPair._keypair.publicKey).toString();
const privateKey =  newPair._keypair.secretKey;

const connection = new Connection(clusterApiUrl("devnet"), "confirmed");
console.log("Public Key of the generated keypair", publicKey);

const getWalletBalance = async() => {
    try{
        const connection = new Connection(clusterApiUrl("devnet"), "confirmed");
        console.log("Connection object is : ", connection);

        const myWallet = await Keypair.fromSecretKey(privateKey);
        const walletBalance = await connection.getBalance(new PublicKey(newPair.publicKey));

        console.log('Wallet Balance : ${parseInt(walletBalance)/LAMPORTS_PER_SOL} SOL');

    }catch(err){
        console.log(err);
    }
};


const airDropSOl = async() => {
    try{
        const connection = new Connection(clusterApiUrl("devnet"), "confirmed");
        const myWallet = await Keypair.fromSecretKey(privateKey);


    }catch(err){
        console.log(err);
    }

};
